/dts-v1/;

/ {
	model = "LiteX SoC";
	compatible = "litex,litex";
	#address-cells = <1>;
	#size-cells = <1>;

	aliases {
		serial0 = &uart0;
	};

	cpus {
		#address-cells = <1>;
		#size-cells	= <0>;
		timebase-frequency = <CONFIG_CLOCK_FREQUENCY>;

#ifdef CONFIG_CPU_TYPE_OPENC906
		cpu0: cpu@0 {
			device_type = "cpu";
			compatible = "thead,c906", "riscv";
			riscv,isa = "rv64imafdc_zicsr_zifencei_xthead";
			mmu-type = "riscv,sv39";
			reg = <0>;
			clock-frequency = <CONFIG_CLOCK_FREQUENCY>;
			i-cache-size = <32768>;
			i-cache-sets = <4>;
			i-cache-line-size = <64>;
			d-cache-size = <32768>;
			d-cache-sets = <2>;
			d-cache-line-size = <64>;
#ifdef CONFIG_L2_SIZE
			next-level-cache = <&l2cache>;
#endif
			status = "okay";
			
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
#endif

#ifdef CONFIG_L2_SIZE
		l2cache: l2-cache {
			compatible = "litex,litedram-cache", "cache";
			cache-unified;
			cache-size = <CONFIG_L2_SIZE>;
			cache-level = <2>;
		};
#endif
	};

	memory@MAIN_RAM_UNIT_ADDRESS {
		device_type = "memory";
		reg = <MAIN_RAM_REG_ADDRESS MAIN_RAM_REG_SIZE>;
	};

	clocks {
		sys_clk: litex-sys-clk {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <CONFIG_CLOCK_FREQUENCY>;
		};
	};

	soc {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "simple-bus";
		interrupt-parent = <&plic>;
		ranges;

#ifdef CONFIG_CPU_TYPE_OPENC906
		plic: interrupt-controller@PLIC_UNIT_ADDRESS {
			compatible = "thead,openc906-plic", "thead,c900-plic";
			reg = <PLIC_REG_ADDRESS PLIC_REG_SIZE>;
			#interrupt-cells = <1>;
			interrupt-controller;
			interrupts-extended = <&cpu0_intc 11 &cpu0_intc 9>;
			riscv,ndev = <240>;
		};

		/* TODO: Add ACLINT MSWI/SSWI */
#endif

		soc_ctrl: soc-controller@CTRL_UNIT_ADDRESS {
			compatible = "litex,soc-controller";
			reg = <CTRL_REG_ADDRESS 0xc>;
			status = "okay";
		};

		uart0: serial@UART_UNIT_ADDRESS {
			compatible = "litex,liteuart";
			reg = <UART_REG_ADDRESS 0x100>;
			interrupts = <UART_INTERRUPT>;
			status = "okay";
		};

#ifdef SDCORE_REG_ADDRESS
		mmc: mmc@SDPHY_UNIT_ADDRESS {
			compatible = "litex,mmc";
			reg = <SDPHY_REG_ADDRESS 0x100>,
			      <SDCORE_REG_ADDRESS 0x100>,
			      <SDBLOCK2MEM_REG_ADDRESS 0x100>,
			      <SDMEM2BLOCK_REG_ADDRESS 0x100>,
			      <SDIRQ_REG_ADDRESS 0x100>;
			reg-names = "phy", "core", "reader", "writer", "irq";
			clocks = <&sys_clk>;
			vmmc-supply = <&vcc_mmc>;
			interrupts = <SDIRQ_INTERRUPT>;
		};
#endif

#if defined(ETHPHY_REG_ADDRESS) && defined(ETHMAC_REG_ADDRESS)
		mac0: mac@ETHMAC_UNIT_ADDRESS {
			compatible = "litex,liteeth";
			reg = <ETHMAC_REG_ADDRESS 0x7c>,
			      <ETHPHY_REG_ADDRESS 0x0a>,
			      <ETHMAC_SRAM_REG_ADDRESS ETHMAC_SRAM_REG_SIZE>;
			reg-names = "mac", "mdio", "buffer";
			litex,rx-slots = <ETHMAC_RX_SLOTS>;
			litex,tx-slots = <ETHMAC_TX_SLOTS>;
			litex,slot-size = <ETHMAC_SLOT_SIZE>;
			interrupts = <ETHMAC_INTERRUPT>;
			status = "okay";
		};
#endif
	};

#ifdef SDCORE_REG_ADDRESS
	vcc_mmc: mmc-regulator {
            compatible = "regulator-fixed";
            regulator-name = "vcc-mmc";
            regulator-min-microvolt = <3300000>;
            regulator-max-microvolt = <3300000>;
            regulator-always-on;
        };
#endif
};
